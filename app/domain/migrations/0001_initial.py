# Generated by Django 5.0.4 on 2024-07-12 17:01

import uuid

import django_currentuser.middleware
import django_tenants.postgresql_backend.base
import oauth2_provider.generators
import oauth2_provider.models
import wagtail.search.index

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.contenttypes.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import app.context
import domain.models.attribute.attribute_field


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='rs_collection',
            fields=[
                ('ref', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('user', models.IntegerField(null=True)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('public', models.IntegerField(default='0')),
                ('theme', models.CharField(blank=True, max_length=100)),
                ('theme2', models.CharField(blank=True, max_length=100)),
                ('theme3', models.CharField(blank=True, max_length=100)),
                ('allow_changes', models.IntegerField(default='0')),
                ('cant_delete', models.IntegerField(default='0')),
                ('keywords', models.TextField()),
                ('savedsearch', models.IntegerField(null=True)),
                ('home_page_publish', models.IntegerField(null=True)),
                ('home_page_text', models.TextField()),
                ('home_page_image', models.IntegerField(null=True)),
                ('session_id', models.IntegerField(null=True)),
                ('theme4', models.CharField(blank=True, max_length=100)),
                ('theme5', models.CharField(blank=True, max_length=100)),
                ('theme6', models.CharField(blank=True, max_length=100)),
                ('theme7', models.CharField(blank=True, max_length=100)),
                ('theme8', models.CharField(blank=True, max_length=100)),
                ('theme9', models.CharField(blank=True, max_length=100)),
                ('theme10', models.CharField(blank=True, max_length=100)),
                ('theme11', models.CharField(blank=True, max_length=100)),
                ('theme12', models.CharField(blank=True, max_length=100)),
                ('theme13', models.CharField(blank=True, max_length=100)),
                ('theme14', models.CharField(blank=True, max_length=100)),
                ('theme15', models.CharField(blank=True, max_length=100)),
                ('theme16', models.CharField(blank=True, max_length=100)),
                ('theme17', models.CharField(blank=True, max_length=100)),
                ('theme18', models.CharField(blank=True, max_length=100)),
                ('theme19', models.CharField(blank=True, max_length=100)),
                ('theme20', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rs_collection_resource',
            fields=[
                ('date_added', models.DateTimeField(auto_now_add=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('rating', models.IntegerField(null=True)),
                ('use_as_theme_thumbnail', models.IntegerField(null=True)),
                ('purchase_size', models.CharField(blank=True, max_length=10)),
                ('purchase_complete', models.IntegerField(default='0')),
                ('purchase_price', models.FloatField(default='0.00', max_length=10)),
                ('sortorder', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'collection_resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rs_resource',
            fields=[
                ('ref', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('resource_type', models.IntegerField(null=True)),
                ('has_image', models.IntegerField(default='0')),
                ('is_transcoding', models.IntegerField(default='0')),
                ('hit_count', models.IntegerField(default='0')),
                ('new_hit_count', models.IntegerField(default='0')),
                ('creation_date', models.DateTimeField(blank=True, null=True)),
                ('rating', models.IntegerField(null=True)),
                ('user_rating', models.IntegerField(null=True)),
                ('user_rating_count', models.IntegerField(null=True)),
                ('user_rating_total', models.IntegerField(null=True)),
                ('country', models.CharField(blank=True, default=None, max_length=200)),
                ('file_extension', models.CharField(blank=True, max_length=10)),
                ('preview_extension', models.CharField(blank=True, max_length=10)),
                ('image_red', models.IntegerField(null=True)),
                ('image_green', models.IntegerField(null=True)),
                ('image_blue', models.IntegerField(null=True)),
                ('thumb_width', models.IntegerField(null=True)),
                ('thumb_height', models.IntegerField(null=True)),
                ('archive', models.IntegerField(default='0')),
                ('access', models.IntegerField(default='0')),
                ('colour_key', models.CharField(blank=True, max_length=5)),
                ('created_by', models.IntegerField(null=True)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_modified', models.DateTimeField(blank=True, null=True)),
                ('file_checksum', models.CharField(blank=True, max_length=32)),
                ('request_count', models.IntegerField(default='0')),
                ('expiry_notification_sent', models.IntegerField(default='0')),
                ('preview_tweaks', models.CharField(blank=True, max_length=50)),
                ('geo_lat', models.FloatField(default=None, null=True)),
                ('geo_long', models.FloatField(default=None, null=True)),
                ('mapzoom', models.IntegerField(null=True)),
                ('disk_usage', models.IntegerField(null=True)),
                ('disk_usage_last_updated', models.DateTimeField(blank=True, null=True)),
                ('file_size', models.IntegerField(default=None, null=True)),
                ('preview_attempts', models.IntegerField(default=None, null=True)),
                ('field12', models.CharField(blank=True, default=None, max_length=200)),
                ('field8', models.CharField(blank=True, default=None, max_length=200)),
                ('field3', models.CharField(blank=True, default=None, max_length=200)),
                ('annotation_count', models.IntegerField(null=True)),
                ('field51', models.CharField(blank=True, default=None, max_length=200)),
                ('field79', models.CharField(blank=True, default=None, max_length=200)),
                ('modified', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'resource',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rs_resource_data',
            fields=[
                ('django_id', models.IntegerField(db_column='django_id', primary_key=True, serialize=False)),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'resource_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rs_resource_type_field',
            fields=[
                ('ref', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('title', models.CharField(blank=True, max_length=400)),
                ('type', models.IntegerField(null=True)),
                ('order_by', models.IntegerField(default='0')),
                ('keywords_index', models.IntegerField(default='0')),
                ('partial_index', models.IntegerField(default='0')),
                ('resource_type', models.IntegerField(default='0')),
                ('resource_column', models.CharField(blank=True, max_length=50)),
                ('display_field', models.IntegerField(default='1')),
                ('use_for_similar', models.IntegerField(default='1')),
                ('iptc_equiv', models.CharField(blank=True, max_length=20)),
                ('display_template', models.TextField()),
                ('tab_name', models.CharField(blank=True, max_length=50)),
                ('required', models.IntegerField(default='0')),
                ('smart_theme_name', models.CharField(blank=True, max_length=200)),
                ('exiftool_field', models.CharField(blank=True, max_length=200)),
                ('advanced_search', models.IntegerField(default='1')),
                ('simple_search', models.IntegerField(default='0')),
                ('help_text', models.TextField()),
                ('display_as_dropdown', models.IntegerField(default='0')),
                ('external_user_access', models.IntegerField(default='1')),
                ('autocomplete_macro', models.TextField()),
                ('hide_when_uploading', models.IntegerField(default='0')),
                ('hide_when_restricted', models.IntegerField(default='0')),
                ('value_filter', models.TextField()),
                ('exiftool_filter', models.TextField()),
                ('omit_when_copying', models.IntegerField(default='0')),
                ('tooltip_text', models.TextField()),
                ('regexp_filter', models.CharField(blank=True, max_length=400)),
                ('sync_field', models.IntegerField(null=True)),
                ('display_condition', models.CharField(blank=True, max_length=400)),
                ('onchange_macro', models.TextField()),
                ('field_constraint', models.IntegerField(null=True)),
                ('linked_data_field', models.TextField()),
                ('automatic_nodes_ordering', models.IntegerField(default='0')),
                ('fits_field', models.CharField(blank=True, max_length=255)),
                ('personal_data', models.IntegerField(default='0')),
            ],
            options={
                'db_table': 'resource_type_field',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='rs_user',
            fields=[
                ('ref', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(blank=True, max_length=64)),
                ('fullname', models.CharField(blank=True, max_length=100)),
                ('email', models.CharField(blank=True, max_length=100)),
                (
                    'usergroup',
                    models.IntegerField(
                        choices=[(2, 'General User'), (4, 'Archivist'), (1, 'Administrator'), (3, 'Super Admin')],
                        null=True,
                    ),
                ),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('logged_in', models.IntegerField(null=True)),
                ('last_browser', models.TextField()),
                ('last_ip', models.CharField(blank=True, max_length=100)),
                ('current_collection', models.IntegerField(null=True)),
                ('accepted_terms', models.IntegerField(default='0')),
                ('account_expires', models.DateTimeField(blank=True, null=True)),
                ('comments', models.TextField()),
                ('session', models.CharField(blank=True, max_length=50)),
                ('ip_restrict', models.TextField()),
                ('search_filter_override', models.TextField()),
                ('password_last_change', models.DateTimeField(null=True)),
                ('login_tries', models.IntegerField(default='0')),
                ('login_last_try', models.DateTimeField(blank=True, null=True)),
                ('approved', models.IntegerField(default='1')),
                ('lang', models.CharField(blank=True, max_length=11)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('hidden_collections', models.TextField()),
                ('password_reset_hash', models.CharField(blank=True, max_length=100)),
                ('origin', models.CharField(blank=True, max_length=50)),
                ('unique_hash', models.CharField(blank=True, max_length=50)),
                ('wp_authrequest', models.CharField(blank=True, max_length=50)),
                ('csrf_token', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55)),
                ('parent_id', models.CharField(db_index=True, max_length=36, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='ProxyGroup',
            fields=[],
            options={
                'verbose_name': 'Group',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status',
                    ),
                ),
                (
                    'username',
                    models.CharField(
                        error_messages={'unique': 'A user with that username already exists.'},
                        help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name='username',
                    ),
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Designates whether the user can log into this admin site.',
                        verbose_name='staff status',
                    ),
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                        verbose_name='active',
                    ),
                ),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255)),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.group',
                        verbose_name='groups',
                    ),
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.permission',
                        verbose_name='user permissions',
                    ),
                ),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('agent_type', models.IntegerField(choices=[(1, 'Person'), (2, 'Organization')])),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                (
                    'client_id',
                    models.CharField(
                        db_index=True,
                        default=oauth2_provider.generators.generate_client_id,
                        max_length=100,
                        unique=True,
                    ),
                ),
                ('redirect_uris', models.TextField(blank=True, help_text='Allowed URIs list, space separated')),
                (
                    'post_logout_redirect_uris',
                    models.TextField(blank=True, help_text='Allowed Post Logout URIs list, space separated'),
                ),
                (
                    'client_type',
                    models.CharField(choices=[('confidential', 'Confidential'), ('public', 'Public')], max_length=32),
                ),
                (
                    'authorization_grant_type',
                    models.CharField(
                        choices=[
                            ('authorization-code', 'Authorization code'),
                            ('implicit', 'Implicit'),
                            ('password', 'Resource owner password-based'),
                            ('client-credentials', 'Client credentials'),
                            ('openid-hybrid', 'OpenID connect hybrid'),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    'client_secret',
                    oauth2_provider.models.ClientSecretField(
                        blank=True,
                        db_index=True,
                        default=oauth2_provider.generators.generate_client_secret,
                        help_text='Hashed on Save. Copy it now if this is a new secret.',
                        max_length=255,
                    ),
                ),
                ('name', models.CharField(blank=True, max_length=255)),
                ('skip_authorization', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                (
                    'algorithm',
                    models.CharField(
                        blank=True,
                        choices=[
                            ('', 'No OIDC support'),
                            ('RS256', 'RSA with SHA-2 256'),
                            ('HS256', 'HMAC with SHA-2 256'),
                        ],
                        default='',
                        max_length=5,
                    ),
                ),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                (
                    'user',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='%(app_label)s_%(class)s',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'OAuth Application',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('filefield', models.FileField(max_length=255, upload_to='attachments/%Y/%m/')),
                ('filetype', models.CharField(blank=True, max_length=255)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_related',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeReference',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55)),
                ('description', models.TextField()),
                ('data_type', models.CharField(max_length=15)),
                ('source', models.CharField(max_length=255)),
                ('term_type', models.CharField(blank=True, max_length=55)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AttributeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=55, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField()),
                (
                    'data_type',
                    models.CharField(
                        choices=[
                            ('BOOL', 'BOOL (boolean)'),
                            ('DATE', 'DATE (date)'),
                            ('FKEY', 'FKEY (foreign key)'),
                            ('FLOAT', 'FLOAT (floating point)'),
                            ('INT', 'INT (integer)'),
                            ('JSON', 'JSON (data)'),
                            ('RREL', 'RREL (reverse relation)'),
                            ('STR', 'STR (string)'),
                        ],
                        max_length=15,
                    ),
                ),
                ('is_local', models.BooleanField(default=False)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'same_as',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.attributetype'
                    ),
                ),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('object_id', models.CharField(db_index=True, max_length=36)),
                ('value', domain.models.attribute.attribute_field.AttributeField()),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'attribute_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='newattributes',
                        to='domain.attributetype',
                    ),
                ),
            ],
            options={
                'base_manager_name': 'objects',
                'default_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('use_as_workset', models.BooleanField(default=False)),
                ('is_corpus', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_related',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'team_link',
                    models.ForeignKey(
                        limit_choices_to={'properties__type': 3},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='default_collection',
                        to='auth.group',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('getty_id', models.IntegerField(db_index=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContentAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_unique', models.BooleanField(default=True)),
                ('override_label', models.CharField(blank=True, max_length=255)),
                ('override_description', models.TextField(blank=True)),
                (
                    'attribute_type',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='contenttypes',
                        to='domain.attributetype',
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='ContentTypeExtended',
            fields=[
                (
                    'contenttype_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='contenttypes.contenttype',
                    ),
                ),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('is_abstract', models.BooleanField(default=True)),
                ('can_view', models.BooleanField(default=True)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('can_add', models.BooleanField(default=False)),
                ('can_remove', models.BooleanField(default=False)),
                (
                    'attribute_types',
                    models.ManyToManyField(through='domain.ContentAttributes', to='domain.attributetype'),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.contenttypeextended'
                    ),
                ),
            ],
            options={
                'ordering': ['id'],
            },
            bases=('contenttypes.contenttype',),
            managers=[
                ('objects', django.contrib.contenttypes.models.ContentTypeManager()),
            ],
        ),
        migrations.AddField(
            model_name='contentattributes',
            name='content_type',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='attributes_list',
                to='domain.contenttypeextended',
            ),
        ),
        migrations.CreateModel(
            name='CountryReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('alpha_3_code', models.CharField(max_length=3)),
                ('alpha_2_code', models.CharField(max_length=2)),
                ('num_code', models.IntegerField()),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Headword',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('word', models.CharField(max_length=55)),
                ('full_lemma', models.CharField(max_length=255)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.concept')),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('glottocode', models.CharField(max_length=25, unique=True)),
                ('iso6393', models.CharField(blank=True, default=None, max_length=25, null=True, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('is_dialect', models.BooleanField(default=False)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.languagereference'
                    ),
                ),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    'location_type',
                    models.IntegerField(choices=[(1, 'Address'), (2, 'Country'), (3, 'Geometry'), (4, 'Locale')]),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.concept')),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectAttribute',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    'attribute_concept',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.concept'),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('obj', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.object')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                (
                    'payload_type',
                    models.CharField(
                        choices=[
                            ('db_records', 'DB Records'),
                            ('field_choices', 'Field Choices'),
                            ('static_list', 'Static List'),
                        ],
                        max_length=15,
                    ),
                ),
                ('description', models.TextField()),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='contentattributes',
            name='override_options',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.optionslist'),
        ),
        migrations.AddField(
            model_name='attributetype',
            name='options',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.optionslist'),
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=55)),
                ('dam_id', models.IntegerField(db_index=True, null=True)),
                ('order', models.IntegerField(db_index=True)),
                ('canvas', models.TextField(blank=True, null=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='PageNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'page',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='records', to='domain.page'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'location',
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.location'),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PreferenceKey',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=55, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('description', models.TextField()),
                (
                    'data_type',
                    models.CharField(
                        choices=[
                            ('BOOL', 'BOOL (boolean)'),
                            ('INT', 'INT (integer)'),
                            ('JSON', 'JSON (data)'),
                            ('STR', 'STR (string)'),
                        ],
                        max_length=15,
                    ),
                ),
                ('group', models.CharField(max_length=55)),
                ('default', models.TextField()),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('data', models.TextField()),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='preferences',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.preferencekey')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='PublicRegister',
            fields=[
                ('object_id', models.UUIDField(db_index=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creator',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                (
                    'record',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='workflow',
                        serialize=False,
                        to='domain.record',
                    ),
                ),
                (
                    'wf_status',
                    models.IntegerField(choices=[(1, 'assessing'), (2, 'processing'), (3, 'processed')], default=2),
                ),
                (
                    'stage',
                    models.IntegerField(
                        choices=[(1, 'ingestion'), (2, 'transcription'), (3, 'markup'), (4, 'review'), (5, 'parsing')],
                        default=1,
                    ),
                ),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('help_flag', models.BooleanField(default=False)),
                ('ingestion_done', models.BooleanField(default=False)),
                ('transcription_done', models.BooleanField(default=False)),
                ('markup_done', models.BooleanField(default=False)),
                ('parsing_done', models.BooleanField(default=False)),
                ('review_done', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                (
                    'last_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='record',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='record',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='record',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_related',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='record',
            name='pages',
            field=models.ManyToManyField(db_index=True, through='domain.PageNode', to='domain.page'),
        ),
        migrations.AddField(
            model_name='record',
            name='parent_type',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
            ),
        ),
        migrations.AddField(
            model_name='pagenode',
            name='record',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='pagenodes', to='domain.record'
            ),
        ),
        migrations.CreateModel(
            name='RecordGroup',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55)),
                ('parent_id', models.CharField(db_index=True, max_length=36, null=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_related',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'parent_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RelationshipType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55, unique=True)),
                ('description', models.TextField()),
                ('source', models.CharField(blank=True, max_length=255)),
                ('is_directed', models.BooleanField(default=False)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='RightsPolicy',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=100)),
                (
                    'rights_status',
                    models.IntegerField(
                        choices=[
                            (1, 'Copyrighted'),
                            (2, 'Orphaned'),
                            (3, 'Owned'),
                            (4, 'Public Domain'),
                            (5, 'Unknown'),
                        ],
                        default=5,
                    ),
                ),
                ('rights', models.TextField(blank=True)),
                ('rights_notice', models.JSONField(null=True)),
                ('licence', models.TextField(blank=True, null=True)),
                ('rights_holder', models.CharField(blank=True, max_length=255)),
                ('notice_display', models.BooleanField(default=False)),
                ('public_display', models.BooleanField(default=True)),
                (
                    'attachments',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.attachment'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('parameters', models.JSONField()),
                ('notes', models.TextField(blank=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('source_object_id', models.CharField(db_index=True, max_length=36)),
                ('target_object_id', models.CharField(db_index=True, max_length=36)),
                ('notes', models.TextField(blank=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'source_content_type',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='rel_sources',
                        to='contenttypes.contenttype',
                    ),
                ),
                (
                    'target_content_type',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='rel_targets',
                        to='contenttypes.contenttype',
                    ),
                ),
                (
                    'rel_type',
                    models.ForeignKey(
                        db_column='rel_type',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='relationships',
                        to='domain.relationshiptype',
                    ),
                ),
                ('scopes', models.ManyToManyField(db_index=True, to='domain.scope')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScopeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=55, unique=True)),
                ('description', models.TextField()),
                ('source', models.CharField(blank=True, max_length=255)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='scope',
            name='scope_type',
            field=models.ForeignKey(
                db_column='scope_type',
                on_delete=django.db.models.deletion.CASCADE,
                related_name='scopes',
                to='domain.scopetype',
            ),
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'schema_name',
                    models.CharField(
                        db_index=True,
                        max_length=63,
                        unique=True,
                        validators=[django_tenants.postgresql_backend.base._check_schema_name],  # noqa: SLF001
                    ),
                ),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(default='')),
                ('description', models.TextField(blank=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_related',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'team_link',
                    models.ForeignKey(
                        limit_choices_to={'properties__type': 3},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='team_tasklist',
                        to='auth.group',
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'verbose_name_plural': 'Task Lists',
                'ordering': ['name'],
                'unique_together': {('name', 'team_link', 'owner')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('title', models.CharField(max_length=140)),
                ('description', models.TextField(blank=True)),
                ('priority', models.PositiveIntegerField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255)),
                (
                    'assignees',
                    models.ManyToManyField(blank=True, related_name='task_assignations', to=settings.AUTH_USER_MODEL),
                ),
                (
                    'completed_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='completed_tasks',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('files', models.ManyToManyField(blank=True, related_name='tasks', to='domain.attachment')),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('resources', models.ManyToManyField(blank=True, related_name='tasks', to='domain.collection')),
                (
                    'task_list',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='domain.tasklist'
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'ordering': ['creation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SavedSearch',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('shareable', models.BooleanField(default=False)),
                ('search', models.JSONField()),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'owner',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_related',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecordType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='subtypes',
                        to='domain.recordtype',
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=55)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'zotero_library_id',
                    models.IntegerField(
                        help_text='Group ID for Zotero library to use for this project.',
                        null=True,
                        verbose_name='Zotero library ID',
                    ),
                ),
                (
                    'zotero_api_key',
                    models.CharField(
                        blank=True,
                        help_text="Zotero API key granting access to project's library.",
                        max_length=255,
                        verbose_name='Zotero API key',
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'tenant',
                    models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.tenant'),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OptionsValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('payload', models.JSONField()),
                ('public', models.BooleanField(default=False)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'op_list',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='values', to='domain.optionslist'
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroupProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'group_type',
                    models.IntegerField(
                        choices=[(1, 'Admin'), (2, 'DAM'), (3, 'Team'), (4, 'Knowledge Base'), (5, 'Website')]
                    ),
                ),
                ('description', models.CharField(max_length=255)),
                (
                    'group',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='auth.group'
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.tenant'),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(db_index=True, max_length=253, unique=True)),
                ('is_primary', models.BooleanField(db_index=True, default=True)),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'tenant',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='domains', to='domain.tenant'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.CharField(db_index=True, max_length=55)),
                ('body', models.TextField(blank=True)),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'ordering': ['creation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CollectionMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.CharField(db_index=True, max_length=36)),
                ('order', models.IntegerField(null=True)),
                (
                    'collection',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='members', to='domain.collection'
                    ),
                ),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'ordering': ['order', 'collection', 'id'],
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant'),
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('subject', models.CharField(max_length=140)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Open'), (1, 'Closed')], default=0)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('closing_date', models.DateTimeField(blank=True, null=True)),
                (
                    'assigned_to',
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='ticket_assigned_to',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'closing_user',
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('files', models.ManyToManyField(blank=True, related_name='tickets', to='domain.attachment')),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['status', 'creation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Transcription',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('transcription', models.TextField(blank=True)),
                ('author', models.CharField(default=app.context.get_current_username, max_length=255)),
                ('version', models.IntegerField(default=1)),
                ('count_ignore', models.BooleanField(default=False)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pagenode',
            name='transcription',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='pagenodes',
                to='domain.transcription',
            ),
        ),
        migrations.CreateModel(
            name='EntityPhrase',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('object_id', models.UUIDField(db_index=True, null=True)),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'transcription',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='entity_phrases',
                        to='domain.transcription',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wordform',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('normalized_form', models.CharField(max_length=55)),
                ('pos', models.CharField(max_length=255)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('headword', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.headword')),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('raw_token', models.CharField(max_length=255)),
                ('clean_token', models.CharField(max_length=55)),
                ('order', models.IntegerField(db_index=True)),
                ('flags', models.CharField(max_length=10)),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'object_phrase',
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='domain.entityphrase'),
                ),
                ('wordform', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.wordform')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ZoteroCollection',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.CharField(
                        help_text='Zotero ID of the collection.', max_length=25, primary_key=True, serialize=False
                    ),
                ),
                ('label', models.CharField(help_text='Label for the collection.', max_length=255)),
                (
                    'has_biblio_sources',
                    models.BooleanField(
                        default=False,
                        help_text='Indicates if entries in this collection should be included as potential sources for records.',
                        verbose_name='Contains sources?',
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'project',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='zotero_collections',
                        to='domain.project',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                (
                    'agent_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='domain.agent',
                    ),
                ),
                ('short_name', models.CharField(max_length=55)),
                (
                    'location',
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='domain.location'),
                ),
            ],
            bases=('domain.agent',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                (
                    'agent_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='domain.agent',
                    ),
                ),
                (
                    'user',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='person_record',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            bases=('domain.agent',),
        ),
        migrations.CreateModel(
            name='LocaleReference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('administrative_region', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, null=True)),
                (
                    'country',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.countryreference'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'ordering': ['country', 'name'],
                'unique_together': {('name', 'administrative_region')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='contentattributes',
            unique_together={('content_type', 'attribute_type')},
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('principal_id', models.PositiveIntegerField(db_index=True, null=True)),
                ('object_id', models.CharField(db_index=True, max_length=36)),
                ('is_default', models.BooleanField(default=False)),
                ('can_view', models.BooleanField(default=False)),
                ('can_edit', models.BooleanField(default=False)),
                ('can_delete', models.BooleanField(default=False)),
                ('can_add', models.BooleanField(default=False)),
                ('can_remove', models.BooleanField(default=False)),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='cperm_objects',
                        to='contenttypes.contenttype',
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'principal_type',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='cperm_principals',
                        to='contenttypes.contenttype',
                    ),
                ),
            ],
            options={
                'unique_together': {('content_type', 'object_id', 'principal_type', 'principal_id')},
            },
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('event', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                (
                    'user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'record',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='work_log', to='domain.workflow'
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    'tag_type',
                    models.CharField(choices=[('WF', 'Workflow'), ('C', 'Control'), ('T', 'Ticket')], max_length=2),
                ),
                ('tag', models.CharField(blank=True, max_length=55)),
                ('tag_group', models.CharField(blank=True, max_length=255, null=True)),
                ('object_id', models.CharField(blank=True, db_index=True, max_length=55)),
                (
                    'content_type',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
                    ),
                ),
                (
                    'creation_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_creation',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'modification_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='%(app_label)s_%(class)s_modification',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.tenant')),
            ],
            options={
                'unique_together': {('tag', 'object_id')},
            },
        ),
        migrations.AddConstraint(
            model_name='recordtype',
            constraint=models.UniqueConstraint(fields=('name', 'parent'), name='unique_name_parent'),
        ),
        migrations.AlterUniqueTogether(
            name='collectionmembership',
            unique_together={('content_type', 'object_id', 'collection')},
        ),
    ]
