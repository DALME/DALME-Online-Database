# Generated by Django 4.2.2 on 2024-02-19 21:29

import django_currentuser.middleware

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('dalme_app', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('ida', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Workflow',
            fields=[
                (
                    'record',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name='workflow',
                        serialize=False,
                        to='ida.record',
                    ),
                ),
                (
                    'wf_status',
                    models.IntegerField(choices=[(1, 'assessing'), (2, 'processing'), (3, 'processed')], default=2),
                ),
                (
                    'stage',
                    models.IntegerField(
                        choices=[(1, 'ingestion'), (2, 'transcription'), (3, 'markup'), (4, 'review'), (5, 'parsing')],
                        default=1,
                    ),
                ),
                ('last_modified', models.DateTimeField(blank=True, null=True)),
                ('help_flag', models.BooleanField(default=False)),
                ('ingestion_done', models.BooleanField(default=False)),
                ('transcription_done', models.BooleanField(default=False)),
                ('markup_done', models.BooleanField(default=False)),
                ('parsing_done', models.BooleanField(default=False)),
                ('review_done', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                (
                    'last_user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('event', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                (
                    'record',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='work_log', to='dalme_app.workflow'
                    ),
                ),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant')),
                (
                    'user',
                    models.ForeignKey(
                        default=django_currentuser.middleware.get_current_user,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='tasklist',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='tasklist',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='tasklist',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_related',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='tasklist',
            name='team_link',
            field=models.ForeignKey(
                limit_choices_to={'properties__type': 3},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='team_tasklist',
                to='auth.group',
            ),
        ),
        migrations.AddField(
            model_name='tasklist',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='task',
            name='assignees',
            field=models.ManyToManyField(blank=True, related_name='task_assignations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='task',
            name='completed_by',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='completed_tasks',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='files',
            field=models.ManyToManyField(blank=True, related_name='tasks', to='dalme_app.attachment'),
        ),
        migrations.AddField(
            model_name='task',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='resources',
            field=models.ManyToManyField(blank=True, related_name='tasks', to='dalme_app.collection'),
        ),
        migrations.AddField(
            model_name='task',
            name='task_list',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='dalme_app.tasklist'
            ),
        ),
        migrations.AddField(
            model_name='task',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='tag',
            name='content_type',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
            ),
        ),
        migrations.AddField(
            model_name='tag',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='tag',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='tag',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='savedsearch',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='savedsearch',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='savedsearch',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_related',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='savedsearch',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='comment',
            name='content_type',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
            ),
        ),
        migrations.AddField(
            model_name='comment',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='comment',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='comment',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='collectionmembership',
            name='collection',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='members', to='dalme_app.collection'
            ),
        ),
        migrations.AddField(
            model_name='collectionmembership',
            name='content_type',
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'
            ),
        ),
        migrations.AddField(
            model_name='collectionmembership',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='collectionmembership',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='collectionmembership',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='collection',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_related',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='team_link',
            field=models.ForeignKey(
                limit_choices_to={'properties__type': 3},
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='default_collection',
                to='auth.group',
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AddField(
            model_name='attachment',
            name='creation_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_creation',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='attachment',
            name='modification_user',
            field=models.ForeignKey(
                default=django_currentuser.middleware.get_current_user,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_modification',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='attachment',
            name='owner',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='%(app_label)s_%(class)s_related',
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name='attachment',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='ida.tenant'),
        ),
        migrations.AlterUniqueTogether(
            name='tasklist',
            unique_together={('name', 'team_link', 'owner')},
        ),
        migrations.AlterUniqueTogether(
            name='tag',
            unique_together={('tag', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='collectionmembership',
            unique_together={('content_type', 'object_id', 'collection')},
        ),
    ]
