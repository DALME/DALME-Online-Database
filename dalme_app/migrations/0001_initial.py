# Generated by Django 4.2.2 on 2024-02-19 21:29

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('filefield', models.FileField(upload_to='attachments/%Y/%m/')),
                ('filetype', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('use_as_workset', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollectionMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('object_id', models.CharField(db_index=True, max_length=36)),
            ],
            options={
                'ordering': ['collection', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('object_id', models.CharField(db_index=True, max_length=55)),
                ('body', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['creation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SavedSearch',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ('name', models.CharField(max_length=255)),
                ('search', models.JSONField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                (
                    'id',
                    models.UUIDField(
                        db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                (
                    'tag_type',
                    models.CharField(choices=[('WF', 'Workflow'), ('C', 'Control'), ('T', 'Ticket')], max_length=2),
                ),
                ('tag', models.CharField(blank=True, max_length=55)),
                ('tag_group', models.CharField(blank=True, max_length=255)),
                ('object_id', models.CharField(blank=True, db_index=True, max_length=55)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=140)),
                ('description', models.TextField(blank=True)),
                ('priority', models.PositiveIntegerField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['creation_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TaskList',
            fields=[
                ('creation_timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('modification_timestamp', models.DateTimeField(auto_now=True, null=True)),
                ('id', models.AutoField(db_index=True, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=60)),
                ('slug', models.SlugField(default='')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Task Lists',
                'ordering': ['name'],
            },
        ),
    ]
