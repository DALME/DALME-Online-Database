# ; -*- mode: makefile ;-*-
# vi: set ft=make :
RESOLVER := /etc/resolver/localhost
TENANTS = dalme globalpharmacopeias

web.build:
	 docker compose up -d --no-deps --build $(PROJECT).web
.PHONY: web.build

web.collectstatic:
	@# Doesn't succeed if we just use 'all_tenants_command collectstatic'. It
	@# only collects the files for dalme even though the command reports that
	@# it has collected the files for globalpharmacopeias. So we loop instead.
	$(foreach tenant,$(TENANTS),\
		docker compose exec \
		$(PROJECT).web \
		python manage.py \
		collectstatic_schemas --schema=$(tenant);)
	@# Lastly, collect all non-tenant partitioned staticfiles.
	docker compose exec \
		$(PROJECT).web \
		python manage.py collectstatic
.PHONY: web.collectstatic

web.dns:
	sudo mkdir -p /etc/resolver
	[ -L $(RESOLVER) ] || sudo ln -s $(CONFIG)/localhost $(RESOLVER)
.PHONY: web.dns

web.init: web.install web.dns
.PHONY: web.init

web.install:
	$(VENV_BIN)/python3 -m \
		pip install -r $(ROOT)/requirements-dev.txt
.PHONY: web.install

web.manage:
ifndef args
	$(error Call management commands with args. \
		Usage: make web.manage args='collectstatic --no-input')
else
	docker compose exec \
		$(PROJECT).web \
		python manage.py $(args)
endif
.PHONY: web.manage

web.open:
	open https://localhost:8000/
.PHONY: web.open

web.python:
	docker compose exec \
		$(PROJECT).web \
		python manage.py shell_plus --print-sql
.PHONY: web.python

web.shell:
	docker compose exec \
		$(PROJECT).web \
		bash
.PHONY: web.shell

web.sync: web.install web.build
.PHONY: web.sync

web.test:
	docker compose run --rm \
		-e DEBUG='' \
		-e DJANGO_CONFIGURATION='Development' \
		$(PROJECT).web \
		pytest -s \
		--cov=. \
		--cov-report=term-missing \
		--hypothesis-show-statistics \
		$(args)
.PHONY: web.test

web.test.i:
	docker compose run --rm \
		-e DJANGO_CONFIGURATION='Development' \
		$(PROJECT).web \
		pytest -svv \
		-m 'integration' \
		--cov=. \
		--cov-report=term-missing \
		$(args)
.PHONY: web.test.i

web.test.p:
	docker compose run --rm \
		-e DJANGO_CONFIGURATION='Development' \
		$(PROJECT).web \
		pytest -svv \
		-m 'property' \
		--cov=. \
		--cov-report=term-missing \
		--hypothesis-show-statistics \
		$(args)
.PHONY: web.test.p

web.test.u:
	docker compose run --rm \
		-e DJANGO_CONFIGURATION='Development' \
		$(PROJECT).web \
		pytest -svv \
		-m 'unit' \
		--cov=. \
		--cov-report=term-missing \
		$(args)
.PHONY: web.test.u

web.test.watch:
	docker compose run --rm \
		-e DJANGO_CONFIGURATION='Development' \
		$(PROJECT).web \
		ptw . $(args)
.PHONY: web.test.watch

web.help:
	@echo "  web.build              rebuild the web service"
	@echo "  web.collectstatic       bundle static files for all apps and tenants"
	@echo "  web.install            install the web requirements into the local venv"
	@echo "  web.manage             call django management commands"
	@echo "  web.open               view the site in your browser."
	@echo "  web.python             shell into python on the web container"
	@echo "  web.shell              shell into the web container"
	@echo "  web.sync               install the web requirements and rebuild the service"
	@echo "  web.test               run the web test suite in full"
	@echo "  web.test.i             run only the web integration tests"
	@echo "  web.test.p             run only the web property tests"
	@echo "  web.test.u             run only the web unit tests"
	@echo "  web.test.watch         re-run the test suite on code changes"
	@echo ""
.PHONY: web.help
