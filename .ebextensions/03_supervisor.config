files:
  "/opt/python/etc/supervisord.conf" :
    mode: "000644"
    owner: root
    group: root
    content: |
      [unix_http_server]
      file=/opt/python/run/supervisor.sock      ; (the path to the socket file)
      chmod=0766
      chown=root:root

      [supervisord]
      logfile=/opt/python/log/supervisord.log   ; (main log file;default $CWD/supervisord.log)
      logfile_maxbytes=10MB                     ; (max main logfile bytes b4 rotation;default 50MB)
      logfile_backups=10                        ; (num of main logfile rotation backups;default 10)
      loglevel=info                             ; (log level;default info; others: debug,warn,trace)
      pidfile=/opt/python/run/supervisord.pid   ; (supervisord pidfile;default supervisord.pid)
      nodaemon=false                            ; (start in foreground if true;default false)
      minfds=1024                               ; (min. avail startup file descriptors;default 1024)
      minprocs=200                              ; (min. avail process descriptors;default 200)
      directory=/opt/python/current/app         ; (default is not to cd during start)
      user=root                                 ; default user

      [rpcinterface:supervisor]
      supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

      [supervisorctl]
      serverurl=unix:///opt/python/run/supervisor.sock ; use a unix:// URL  for a unix socket

      [program:httpd]
      command=/opt/python/bin/httpdlaunch
      numprocs=1
      directory=/opt/python/current/app
      autostart=true
      autorestart=unexpected
      startsecs=1                   ; number of secs prog must stay running (def. 1)
      startretries=3                ; max # of serial start failures (default 3)
      exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
      killasgroup=false             ; SIGKILL the UNIX process group (def false)
      redirect_stderr=false

      [include]
      files=celeryd.conf
  "/etc/init.d/supervisord" :
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash

      # Source function library
      . /etc/rc.d/init.d/functions

      # Source system settings
      if [ -f /etc/sysconfig/supervisord ]; then
          . /etc/sysconfig/supervisord
      fi

      # Path to the supervisorctl script, server binary,
      # and short-form for messages.
      supervisorctl=/usr/local/bin/supervisorctl
      supervisord=${SUPERVISORD-/usr/local/bin/supervisord}
      prog=supervisord
      pidfile=${PIDFILE-/opt/python/run/supervisord.pid}
      lockfile=${LOCKFILE-/var/lock/subsys/supervisord}
      STOP_TIMEOUT=${STOP_TIMEOUT-60}
      OPTIONS="${OPTIONS--c /opt/python/etc/supervisord.conf}"
      RETVAL=0

      start() {
          echo -n $"Starting $prog: "
          daemon --pidfile=${pidfile} $supervisord $OPTIONS
          RETVAL=$?
          echo
          if [ $RETVAL -eq 0 ]; then
              touch ${lockfile}
              $supervisorctl $OPTIONS status
          fi
          return $RETVAL
      }

      stop() {
          echo -n $"Stopping $prog: "
          killproc -p ${pidfile} -d ${STOP_TIMEOUT} $supervisord
          RETVAL=$?
          echo
          [ $RETVAL -eq 0 ] && rm -rf ${lockfile} ${pidfile}
      }

      reload() {
          echo -n $"Reloading $prog: "
          LSB=1 killproc -p $pidfile $supervisord -HUP
          RETVAL=$?
          echo
          if [ $RETVAL -eq 7 ]; then
              failure $"$prog reload"
          else
              $supervisorctl $OPTIONS status
          fi
      }

      restart() {
          stop
          start
      }

      case "$1" in
          start)
              start
              ;;
          stop)
              stop
              ;;
          status)
              status -p ${pidfile} $supervisord
              RETVAL=$?
              [ $RETVAL -eq 0 ] && $supervisorctl $OPTIONS status
              ;;
          restart)
              restart
              ;;
          condrestart|try-restart)
              if status -p ${pidfile} $supervisord >&/dev/null; then
                stop
                start
              fi
              ;;
          force-reload|reload)
              reload
              ;;
          *)
              echo $"Usage: $prog {start|stop|restart|condrestart|try-restart|force-reload|reload}"
              RETVAL=2
          esac

          exit $RETVAL
