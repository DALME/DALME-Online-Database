# Generated by Django 4.2.2 on 2024-01-08 18:52
from django.contrib.contenttypes.models import ContentType
from django.db import migrations


def ensure_generic_key_integrity(apps, schema_editor):
    """Make sure all generic foreign keys point to the correct content type."""
    models = [
        {'model': 'ida.RecordGroup', 'cts': ['parent_type']},
        {'model': 'ida.Record', 'cts': ['parent_type']},
        {'model': 'ida.Attribute', 'cts': ['content_type']},
        {'model': 'ida.AttributeValueFkey', 'cts': ['target_content_type']},
        {'model': 'ida.EntityPhrase', 'cts': ['content_type']},
        {'model': 'ida.Permission', 'cts': ['principal_type', 'content_type']},
        {'model': 'ida.Relationship', 'cts': ['source_content_type', 'target_content_type']},
        {'model': 'ida.PublicRegister', 'cts': ['content_type']},
    ]
    for item in models:
        app, model = item['model'].split('.')
        Model = apps.get_model(app, model)  # noqa: N806

        to_update = []
        for obj in Model.objects.all():
            for ct in item['cts']:
                current_ct = getattr(obj, ct)
                try:
                    current_ct_id = current_ct.id  # Handle nulls.
                except AttributeError:
                    continue

                try:
                    CtModel = apps.get_model(current_ct.app_label, current_ct.model)  # noqa: N806
                except LookupError:
                    CtModel = apps.get_model('ida', current_ct.model)  # noqa: N806

                correct_ct_id = ContentType.objects.get_for_model(CtModel).id

                if current_ct_id != correct_ct_id:
                    setattr(obj, f'{ct}_id', correct_ct_id)
                    to_update.append(obj)
                    print(f'Will update obj: {obj}')  # noqa: T201

        print(f'Bulk updating {len(to_update)} instances of model: {Model}')  # noqa: T201
        Model.objects.bulk_update(to_update, fields=[f'{ct}_id'], batch_size=1000)


class Migration(migrations.Migration):
    dependencies = [
        ('ida', '0033_alter_application_logo'),
    ]

    operations = [
        migrations.RunPython(ensure_generic_key_integrity),
    ]
