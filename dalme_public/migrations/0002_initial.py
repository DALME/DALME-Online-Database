# Generated by Django 4.2.2 on 2024-02-19 21:29

import modelcluster.fields
import taggit.managers
import wagtail.models.collections

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('taggit', '0005_auto_20220424_2025'),
        ('dalme_app', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dalme_public', '0001_initial'),
        ('ida', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='featuredobject',
            name='source',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='featured_objects',
                to='ida.record',
            ),
        ),
        migrations.AddField(
            model_name='featuredobject',
            name='source_set',
            field=models.ForeignKey(
                blank=True,
                help_text='Optional, select a particular public set for the source associated with this object. The source must be a member of the set chosen or the page will not validate.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='featured_objects',
                to='dalme_app.collection',
            ),
        ),
        migrations.AddField(
            model_name='featuredinventory',
            name='front_page_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display on the front page.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='featuredinventory',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='featuredinventory',
            name='source',
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='featured_inventories',
                to='ida.record',
            ),
        ),
        migrations.AddField(
            model_name='featuredinventory',
            name='source_set',
            field=models.ForeignKey(
                blank=True,
                help_text='Optional, select a particular public set for the source associated with this inventory. The source must be a member of the set chosen or the page will not validate.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='featured_inventories',
                to='dalme_app.collection',
            ),
        ),
        migrations.AddField(
            model_name='explorepage',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='essay',
            name='front_page_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display on the front page.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='essay',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='essay',
            name='source',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='essays',
                to='ida.record',
            ),
        ),
        migrations.AddField(
            model_name='essay',
            name='source_set',
            field=models.ForeignKey(
                blank=True,
                help_text='Optional, select a particular public set for the source associated with this essay. The source must be a member of the set chosen or the page will not validate.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='essays',
                to='dalme_app.collection',
            ),
        ),
        migrations.AddField(
            model_name='dalmeimage',
            name='collection',
            field=models.ForeignKey(
                default=wagtail.models.collections.get_root_collection_id,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='+',
                to='wagtailcore.collection',
                verbose_name='collection',
            ),
        ),
        migrations.AddField(
            model_name='dalmeimage',
            name='tags',
            field=taggit.managers.TaggableManager(
                blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags'
            ),
        ),
        migrations.AddField(
            model_name='dalmeimage',
            name='uploaded_by_user',
            field=models.ForeignKey(
                blank=True,
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name='uploaded by user',
            ),
        ),
        migrations.AddField(
            model_name='customrendition',
            name='image',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='renditions', to='dalme_public.dalmeimage'
            ),
        ),
        migrations.AddField(
            model_name='corpus',
            name='collections',
            field=modelcluster.fields.ParentalManyToManyField(related_name='corpora', to='dalme_public.collection'),
        ),
        migrations.AddField(
            model_name='corpus',
            name='page',
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE, related_name='corpora', to='dalme_public.collections'
            ),
        ),
        migrations.AddField(
            model_name='collections',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AddField(
            model_name='collection',
            name='source_set',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name='public_collections',
                to='dalme_app.collection',
            ),
        ),
        migrations.AddField(
            model_name='bibliography',
            name='header_image',
            field=models.ForeignKey(
                blank=True,
                help_text='The image that will display in the header.',
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name='+',
                to='dalme_public.dalmeimage',
            ),
        ),
        migrations.AlterUniqueTogether(
            name='customrendition',
            unique_together={('image', 'filter_spec', 'focal_point_key')},
        ),
    ]
